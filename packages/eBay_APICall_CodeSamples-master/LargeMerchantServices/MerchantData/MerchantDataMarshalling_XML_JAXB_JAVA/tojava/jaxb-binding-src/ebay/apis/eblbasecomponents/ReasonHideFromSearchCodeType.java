//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-661 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.05.27 at 06:08:42 PM PDT 
//


package ebay.apis.eblbasecomponents;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ReasonHideFromSearchCodeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ReasonHideFromSearchCodeType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="DuplicateListing"/>
 *     &lt;enumeration value="OutOfStock"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ReasonHideFromSearchCodeType")
@XmlEnum
public enum ReasonHideFromSearchCodeType {


    /**
     * 
     * 						This value indicates that the auction listing is being hidden from search on the eBay
     * 						site because the listing has been determined by eBay to be a duplicate listing with 
     * 						zero bids.
     * 					
     * 
     */
    @XmlEnumValue("DuplicateListing")
    DUPLICATE_LISTING("DuplicateListing"),

    /**
     * 
     * 						This value indicates that the listing is hidden, but still alive, because the item is out-of-stock.
     * 					
     * 
     */
    @XmlEnumValue("OutOfStock")
    OUT_OF_STOCK("OutOfStock");
    private final String value;

    ReasonHideFromSearchCodeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ReasonHideFromSearchCodeType fromValue(String v) {
        for (ReasonHideFromSearchCodeType c: ReasonHideFromSearchCodeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
