//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-661 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.05.27 at 04:06:26 PM PDT 
//


package ebay.apis.eblbasecomponents;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * GetProductFamilyMembers is intended to be used combination with GetProductSearchResults.
 * If a search result returned from GetProductSearchResults does not return all
 * product versions in a family, and if the user wants to see more versions (editions)
 * of the product, you can use GetProductFamilyMembers to retrieve all versions of the product.
 * That is, if GetProductSearchResultsonly returns the product family header (ParentProduct),
 * use this call to zoom in on a particular family of product versions.
 * (This situation usually occurs when you call GetProductSearchResults and more more
 * matches are found than the MaxChildrenPerFamily value you specified.)<br>
 * <br>
 * The structure of tGetProductFamilyMembers is similar to that of GetProductSearchResults.
 * Instead of passing in a query, you pass in a product ID. This product ID is used to
 * find all the members of the product family that the specified product is a member of.
 * The results are compatible with the results from GetProductSearchResults,
 * so similar application logic can be used to handle both requests and responses.
 * This call supports batch requests. This means you can retrieve products in
 * multiple families by using a single request. To perform a batch request,
 * pass an array of ProductSearch objects in the call.<br>
 * <br>
 * For each ProductSearch object, GetProductFamilyMembers returns a list of all the
 * products in the specified product family. Each product is represented as a list of
 * attributes (Item Specifics) plus other identifying information, such as a product ID
 * and a stock photo.<br>
 * <br>
 * Once the user selects a product from the results, pass its ID in a GetProductSellingPages
 * request to retrieve more detailed information about the product, including a set of
 * optional Item Specifics that the seller can use in addition to the
 * pre-filled Item Specifics (see GetProductSellingPages). <br>
 * <br>
 * To use this data in a listing, pass the product ID and the optional Item Specifics
 * in the seller's listing request (AddItem).
 * 			
 * 
 * <p>Java class for GetProductFamilyMembersRequestType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="GetProductFamilyMembersRequestType">
 *   &lt;complexContent>
 *     &lt;extension base="{urn:ebay:apis:eBLBaseComponents}AbstractRequestType">
 *       &lt;sequence>
 *         &lt;element name="ProductSearch" type="{urn:ebay:apis:eBLBaseComponents}ProductSearchType" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GetProductFamilyMembersRequestType", propOrder = {
    "productSearch"
})
public class GetProductFamilyMembersRequestType
    extends AbstractRequestType
{

    @XmlElement(name = "ProductSearch")
    protected List<ProductSearchType> productSearch;

    /**
     * Gets the value of the productSearch property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the productSearch property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProductSearch().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ProductSearchType }
     * 
     * 
     */
    public List<ProductSearchType> getProductSearch() {
        if (productSearch == null) {
            productSearch = new ArrayList<ProductSearchType>();
        }
        return this.productSearch;
    }

}
